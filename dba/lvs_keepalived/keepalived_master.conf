! Configuration File for keepalived
global_defs {
   router_id LVS_DEVEL1             # 主备两个要保持不一致。
}

vrrp_instance VI_1 {
    state MASTER                    # 两个 DS，一个为 MASTER 一个为 BACKUP
    interface ens33                 # 当前 IP 对应的网络接口，通过 ifconfig 查询
    virtual_router_id 62            # 虚拟路由 ID(0-255)，在一个 VRRP 实例中主备服务器 ID 必须一样
    priority 200                    # 优先级值设定：MASTER 要比 BACKUP 的值大
    advert_int 1                    # 通告时间间隔：单位秒，主备要一致
    authentication {                # 认证机制，主从节点保持一致即可
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        192.168.80.222              # VIP，可配置多个
    }
}

# LB 配置 MySQL 读
virtual_server 192.168.80.222 7001 {
	delay_loop 3                    # 设置健康状态检查时间
	lb_algo wrr                     # 调度算法，这里用了 rr 轮询算法
	lb_kind DR                      # 这里测试用了 Direct Route 模式
	persistence_timeout 60          # 持久连接超时时间，1分钟之内没有请求，就会重新进行轮询。
	protocol TCP
	real_server 192.168.80.94 3306 {
	        weight 2
	        TCP_CHECK {
       		    connect_timeout 10　　　
        	    retry 3         	# 旧版本为 nb_get_retry
	            delay_before_retry 3　　　
	            connect_port 3306
        	}
	}
	real_server 192.168.80.95 3306 {
        	weight 1
		TCP_CHECK {
			connect_timeout 10
			retry 3
			delay_before_retry 3
			connect_port 3306
		}
	}
}

# LB 配置 MySQL 写
virtual_server 192.168.80.222 7002 {
	delay_loop 3                    # 设置健康状态检查时间
	lb_algo rr                      # 调度算法，这里用了 rr 轮询算法
	lb_kind DR                      # 这里测试用了 Direct Route 模式
	persistence_timeout 60          # 持久连接超时时间，1分钟之内没有请求，就会重新进行轮询。
	protocol TCP
	real_server 192.168.80.93 3306 {
	        weight 1
	        TCP_CHECK {
       		    connect_timeout 10　　　
        	    retry 3         	# 旧版本为 nb_get_retry
	            delay_before_retry 3　　　
	            connect_port 3306
        	}
	}
}
